name: Build & Push (GHCR, Pi ARM64)

on:
  # Manual trigger lets you choose a tag
  workflow_dispatch:
    inputs:
      tag:
        description: "Image tag (defaults: latest or branch-name)"
        required: false
        default: ""
  # Optional: auto-build on pushes
  push:
    branches: [ "main" ]
    tags: [ "v*.*.*" ]

permissions:
  contents: read
  packages: write   # needed to push to GHCR

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Prepare image name & tags
        id: prep
        run: |
          repo="${GITHUB_REPOSITORY,,}"                    # lower-case owner/repo
          echo "IMAGE=${{ env.REGISTRY }}/${repo}" >> $GITHUB_ENV

          # Compute tags
          if [ -n "${{ github.event.inputs.tag }}" ]; then
            TAGS="${{ env.REGISTRY }}/${repo}:${{ github.event.inputs.tag }},${{ env.REGISTRY }}/${repo}:sha-${GITHUB_SHA::7}"
          elif [[ "${GITHUB_REF}" == refs/tags/* ]]; then
            ver="${GITHUB_REF#refs/tags/}"
            TAGS="${{ env.REGISTRY }}/${repo}:${ver},${{ env.REGISTRY }}/${repo}:latest,${{ env.REGISTRY }}/${repo}:sha-${GITHUB_SHA::7}"
          elif [[ "${GITHUB_REF}" == refs/heads/main ]]; then
            TAGS="${{ env.REGISTRY }}/${repo}:latest,${{ env.REGISTRY }}/${repo}:sha-${GITHUB_SHA::7}"
          else
            branch="${GITHUB_REF#refs/heads/}"
            safe_branch=$(echo "$branch" | tr '/A-Z' '-a-z')
            TAGS="${{ env.REGISTRY }}/${repo}:${safe_branch},${{ env.REGISTRY }}/${repo}:sha-${GITHUB_SHA::7}"
          fi

          echo "TAGS=$TAGS" >> $GITHUB_ENV
          echo "Image: ${{ env.REGISTRY }}/${repo}"
          echo "Tags:  $TAGS"

      - name: Set up QEMU (for cross-building arm64)
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build & Push (linux/arm64)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: linux/arm64
          tags: ${{ env.TAGS }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
